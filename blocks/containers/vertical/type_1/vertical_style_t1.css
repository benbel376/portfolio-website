/* Vertical Container Base Styles */
.vertical-container {
    gap: 1rem;
    width: 100%;
    min-height: 200px;
    align-items: stretch;
}

/* Navigation State Classes */
.vertical-container.nav-visible {
    display: block;
}

.vertical-container.nav-hidden {
    display: none;
}

/* Transition Support */
.vertical-container.nav-transition-fade {
    transition: opacity 0.3s ease-in-out;
}

.vertical-container.nav-transition-slide {
    transition: transform 0.3s ease-in-out;
}

/* Responsive Design */
@media (max-width: 768px) {
    .vertical-container {
        gap: 0.5rem;
        min-height: 150px;
    }
}

/* Ensure direct children occupy full width and clear any unexpected layout modes */
.vertical-container > * {
    width: 100%;
    max-width: 100%;
}

/* Ignore non-visual resources as flex items */
.vertical-container > link,
.vertical-container > script {
    display: none !important;
    flex: 0 0 auto;
}

/* Ensure known component roots take full width */
.vertical-container > .hero-wrapper,
.vertical-container > .summary-component {
    width: 100%;
    max-width: 100%;
}

/* Debug Mode - Optional for development */
.vertical-container[data-nav-debug="true"] {
    border: 2px dashed #ccc;
    padding: 1rem;
    margin: 0.5rem 0;
}

.vertical-container[data-nav-debug="true"]::before {
    content: "Container ID: " attr(id) " | State: " attr(data-nav-state);
    font-size: 0.8rem;
    color: #666;
    background: #f0f0f0;
    padding: 0.25rem 0.5rem;
    border-radius: 3px;
    margin-bottom: 0.5rem;
    display: block;
} 